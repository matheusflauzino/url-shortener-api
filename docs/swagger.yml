openapi: 3.0.0
info:
  title: URL Shortener API
  version: "1.0"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /:
    get:
      summary: Hello world endpoint
      responses:
        '200':
          description: Hello World!
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Application health
  /metrics:
    get:
      summary: Prometheus metrics
      responses:
        '200':
          description: Metrics in Prometheus format
  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
              example:
                username: john
                password: changeme
      responses:
        '201':
          description: Created user
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
  /auth/login:
    post:
      summary: Login and get JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
              example:
                username: john
                password: changeme
      responses:
        '201':
          description: Access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
  /shorten:
    post:
      summary: Create a shortened URL
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
              required:
                - url
              example:
                url: https://example.com
      responses:
        '201':
          description: Shortened URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  shortUrl:
                    type: string
              example:
                shortUrl: http://localhost:3000/abc123
        '400':
          description: Invalid URL
        '500':
          description: Internal server error
  /{code}:
    get:
      summary: Redirect using short code
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirection to the original URL
        '404':
          description: URL not found
        '500':
          description: Internal server error
  /{code}/qrcode:
    get:
      summary: Get QR Code for short URL
      parameters:
        - in: path
          name: code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: QR Code image
          content:
            image/svg+xml:
              schema:
                type: string
                format: binary
        '404':
          description: URL not found
        '500':
          description: Internal server error
